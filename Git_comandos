git init - Este comando ira criar uma pasta oculta chamada .git .Esse processo inicia o
repositorio e permite que sejam armazenadas as mudanças no código

git status - Este comando mostra o status do repositorio. Mostrando se tem alguma coisa que
deva ser commitada ou se existem arquivos não rastreados(untracked)

git add . - Esse comando serve para rastrear e adicionar mudanças feitas em algum arquivo
e em toda a pasta do projeto.
O git não faz atualizações automaticas, ou seja, sempre que houver uma alteração no codigo
ou seja criado um novo arquivo ou pasta, é necessario utlizar o git add .

git add * - Faz a mesma coisa que o git add .

git add nome_do_arquivo - É possivel adicionar arquivos um por um. A prefer é utilizar 
o git add . .Mas nem sempre ele pode ser o melhor comando.

git commit -m 'Seu commit' - O git add adiciona o arquivo a algo chamado container. Ele
tecnicamente não faz parte do arquivo ele é só um historico. Para mandar o cantainer para
o git utiliza-se este comando. Ao utiliza-lo, os arquivos estão oficialmete no repositorio.
Você pode escrever o que bem quiser. Mas o certo é escrever em poucas palavras o que foi
alterado como 'Correção de bugs no arquivo x.py', 'Implemntada função de contagem' ou
'Criação de arquivo P.py'

git log - Com este comando é possivel ver todo o historico de commits feito no 
repositorio. Mas vale lembrar que isto esta relacionado a comandos. Se você não der ao
menos git commit ele não vai aparecer no arquivo.